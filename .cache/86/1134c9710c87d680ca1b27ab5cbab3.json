{"id":"../node_modules/@antv/util/esm/is-string.js","dependencies":[{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\esm\\is-string.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\src\\is-string.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\package.json","includedInParent":true,"mtime":1638980225037},{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\package.json","includedInParent":true,"mtime":1638979319359},{"name":"./is-type","loc":{"line":1,"column":19},"parent":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\esm\\is-string.js","resolved":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\esm\\is-type.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isType = _interopRequireDefault(require(\"./is-type\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = function _default(str) {\n  return (0, _isType.default)(str, 'String');\n};\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/is-string.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/is-string.ts","name":null,"original":{"line":3,"column":15},"generated":{"line":12,"column":15}},{"source":"../src/is-string.ts","name":null,"original":{"line":3,"column":16},"generated":{"line":12,"column":33}},{"source":"../src/is-string.ts","name":null,"original":{"line":3,"column":15},"generated":{"line":12,"column":36}},{"source":"../src/is-string.ts","name":null,"original":{"line":3,"column":24},"generated":{"line":12,"column":38}},{"source":"../src/is-string.ts","name":null,"original":{"line":4,"column":2},"generated":{"line":13,"column":0}},{"source":"../src/is-string.ts","name":null,"original":{"line":4,"column":9},"generated":{"line":13,"column":9}},{"source":"../src/is-string.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":13,"column":30}},{"source":"../src/is-string.ts","name":null,"original":{"line":4,"column":9},"generated":{"line":13,"column":33}},{"source":"../src/is-string.ts","name":null,"original":{"line":4,"column":21},"generated":{"line":13,"column":35}},{"source":"../src/is-string.ts","name":null,"original":{"line":4,"column":9},"generated":{"line":13,"column":43}},{"source":"../src/is-string.ts","name":null,"original":{"line":4,"column":2},"generated":{"line":13,"column":44}},{"source":"../src/is-string.ts","name":null,"original":{"line":5,"column":1},"generated":{"line":14,"column":0}}],"sources":{"../src/is-string.ts":"import isType from './is-type';\n\nexport default (str: any): str is string => {\n  return isType(str, 'String');\n}\n"},"lineCount":null}},"error":null,"hash":"a7c3005a32e0d1b1e3a48c536fed57bc","cacheData":{"env":{}}}