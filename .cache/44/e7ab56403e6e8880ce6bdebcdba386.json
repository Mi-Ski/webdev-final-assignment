{"id":"../node_modules/@antv/l7-core/es/services/renderer/passes/post-processing/NoisePass.js","dependencies":[{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\l7-core\\es\\services\\renderer\\passes\\post-processing\\NoisePass.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\package.json","includedInParent":true,"mtime":1638980225037},{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\l7-core\\package.json","includedInParent":true,"mtime":1638979319341},{"name":"@babel/runtime/helpers/classCallCheck","loc":{"line":1,"column":28},"parent":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\l7-core\\es\\services\\renderer\\passes\\post-processing\\NoisePass.js","resolved":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@babel\\runtime\\helpers\\classCallCheck.js"},{"name":"@babel/runtime/helpers/createClass","loc":{"line":2,"column":25},"parent":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\l7-core\\es\\services\\renderer\\passes\\post-processing\\NoisePass.js","resolved":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@babel\\runtime\\helpers\\createClass.js"},{"name":"@babel/runtime/helpers/inherits","loc":{"line":3,"column":22},"parent":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\l7-core\\es\\services\\renderer\\passes\\post-processing\\NoisePass.js","resolved":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@babel\\runtime\\helpers\\inherits.js"},{"name":"@babel/runtime/helpers/possibleConstructorReturn","loc":{"line":4,"column":39},"parent":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\l7-core\\es\\services\\renderer\\passes\\post-processing\\NoisePass.js","resolved":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@babel\\runtime\\helpers\\possibleConstructorReturn.js"},{"name":"@babel/runtime/helpers/getPrototypeOf","loc":{"line":5,"column":28},"parent":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\l7-core\\es\\services\\renderer\\passes\\post-processing\\NoisePass.js","resolved":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@babel\\runtime\\helpers\\getPrototypeOf.js"},{"name":"inversify","loc":{"line":13,"column":27},"parent":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\l7-core\\es\\services\\renderer\\passes\\post-processing\\NoisePass.js","resolved":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\inversify\\lib\\inversify.js"},{"name":"reflect-metadata","loc":{"line":14,"column":7},"parent":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\l7-core\\es\\services\\renderer\\passes\\post-processing\\NoisePass.js","resolved":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\reflect-metadata\\Reflect.js"},{"name":"../BasePostProcessingPass","loc":{"line":17,"column":35},"parent":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\l7-core\\es\\services\\renderer\\passes\\post-processing\\NoisePass.js","resolved":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\l7-core\\es\\services\\renderer\\passes\\BasePostProcessingPass.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inversify = require(\"inversify\");\n\nrequire(\"reflect-metadata\");\n\nvar _BasePostProcessingPass = _interopRequireDefault(require(\"../BasePostProcessingPass\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _dec, _class;\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar noise = \"varying vec2 v_UV;\\n\\nuniform sampler2D u_Texture;\\nuniform float u_Amount : 0.5;\\n\\nfloat rand(vec2 co) {\\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\\n}\\n\\n// https://github.com/evanw/glfx.js/blob/master/src/filters/adjust/noise.js\\nvec4 noise_filterColor(vec4 color, vec2 texCoord) {\\n  float diff = (rand(texCoord) - 0.5) * u_Amount;\\n  color.r += diff;\\n  color.g += diff;\\n  color.b += diff;\\n  return color;\\n}\\n\\nvoid main() {\\n  gl_FragColor = vec4(texture2D(u_Texture, v_UV));\\n  gl_FragColor = noise_filterColor(gl_FragColor, v_UV);\\n}\";\nvar quad = \"attribute vec2 a_Position;\\n\\nvarying vec2 v_UV;\\n\\nvoid main() {\\n  v_UV = 0.5 * (a_Position + 1.0);\\n  gl_Position = vec4(a_Position, 0., 1.);\\n}\";\nvar NoisePass = (_dec = (0, _inversify.injectable)(), _dec(_class = function (_BasePostProcessingPa) {\n  (0, _inherits2.default)(NoisePass, _BasePostProcessingPa);\n\n  var _super = _createSuper(NoisePass);\n\n  function NoisePass() {\n    (0, _classCallCheck2.default)(this, NoisePass);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(NoisePass, [{\n    key: \"setupShaders\",\n    value: function setupShaders() {\n      this.shaderModuleService.registerModule('noise-pass', {\n        vs: quad,\n        fs: noise\n      });\n      return this.shaderModuleService.getModule('noise-pass');\n    }\n  }]);\n  return NoisePass;\n}(_BasePostProcessingPass.default)) || _class);\nexports.default = NoisePass;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":"NoisePass","original":{"line":12,"column":21},"generated":{"line":61,"column":4}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":"injectable","original":{"line":11,"column":1},"generated":{"line":61,"column":24}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":73,"column":11}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":73,"column":20}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":15,"column":2},"generated":{"line":73,"column":32}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":15,"column":24},"generated":{"line":73,"column":35}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":74,"column":0}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":"shaderModuleService","original":{"line":16,"column":9},"generated":{"line":74,"column":11}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":74,"column":30}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":"registerModule","original":{"line":16,"column":29},"generated":{"line":74,"column":31}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":74,"column":45}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":16,"column":44},"generated":{"line":74,"column":46}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":74,"column":58}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":16,"column":58},"generated":{"line":74,"column":60}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":"vs","original":{"line":17,"column":6},"generated":{"line":75,"column":0}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":"vs","original":{"line":17,"column":6},"generated":{"line":75,"column":8}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":17,"column":8},"generated":{"line":75,"column":10}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":"quad","original":{"line":17,"column":10},"generated":{"line":75,"column":12}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":16,"column":58},"generated":{"line":75,"column":16}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":"fs","original":{"line":18,"column":6},"generated":{"line":76,"column":0}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":"fs","original":{"line":18,"column":6},"generated":{"line":76,"column":8}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":18,"column":8},"generated":{"line":76,"column":10}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":"noise","original":{"line":18,"column":10},"generated":{"line":76,"column":12}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":16,"column":58},"generated":{"line":77,"column":0}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":16,"column":4},"generated":{"line":77,"column":7}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":78,"column":0}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":21,"column":11},"generated":{"line":78,"column":13}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":"shaderModuleService","original":{"line":21,"column":16},"generated":{"line":78,"column":18}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":21,"column":11},"generated":{"line":78,"column":37}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":"getModule","original":{"line":21,"column":36},"generated":{"line":78,"column":38}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":21,"column":11},"generated":{"line":78,"column":47}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":21,"column":46},"generated":{"line":78,"column":48}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":21,"column":11},"generated":{"line":78,"column":60}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":78,"column":61}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":null,"original":{"line":22,"column":3},"generated":{"line":79,"column":0}},{"source":"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts","name":"BasePostProcessingPass","original":{"line":12,"column":39},"generated":{"line":82,"column":2}}],"sources":{"../../../../../src/services/renderer/passes/post-processing/NoisePass.ts":"import { injectable } from 'inversify';\nimport 'reflect-metadata';\nimport noise from '../../../../shaders/post-processing/noise.glsl';\nimport quad from '../../../../shaders/post-processing/quad.glsl';\nimport BasePostProcessingPass from '../BasePostProcessingPass';\n\nexport interface INoisePassConfig {\n  amount: number;\n}\n\n@injectable()\nexport default class NoisePass extends BasePostProcessingPass<\n  INoisePassConfig\n> {\n  public setupShaders() {\n    this.shaderModuleService.registerModule('noise-pass', {\n      vs: quad,\n      fs: noise,\n    });\n\n    return this.shaderModuleService.getModule('noise-pass');\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"5c5b1aaa310c6c667232d0ea72bed543","cacheData":{"env":{}}}