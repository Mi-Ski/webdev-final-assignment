{"id":"../node_modules/@antv/util/esm/min.js","dependencies":[{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\esm\\min.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\src\\min.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\package.json","includedInParent":true,"mtime":1638980225037},{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\package.json","includedInParent":true,"mtime":1638979319359},{"name":"./is-array","loc":{"line":1,"column":20},"parent":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\esm\\min.js","resolved":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\esm\\is-array.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isArray = _interopRequireDefault(require(\"./is-array\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @param {Array} arr The array to iterate over.\n * @return {*} Returns the minimum value.\n * @example\n *\n * min([1, 2]);\n * // => 1\n *\n * min([]);\n * // => undefined\n *\n * const data = new Array(1250010).fill(1).map((d,idx) => idx);\n *\n * min(data);\n * // => 1250010\n * // Math.min(...data) will encounter \"Maximum call stack size exceeded\" error\n */\nvar _default = function _default(arr) {\n  if (!(0, _isArray.default)(arr)) {\n    return undefined;\n  }\n\n  return arr.reduce(function (prev, curr) {\n    return Math.min(prev, curr);\n  }, arr[0]);\n};\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/min.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/min.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":12,"column":0}},{"source":"../src/min.ts","name":null,"original":{"line":21,"column":15},"generated":{"line":29,"column":15}},{"source":"../src/min.ts","name":null,"original":{"line":21,"column":16},"generated":{"line":29,"column":33}},{"source":"../src/min.ts","name":null,"original":{"line":21,"column":15},"generated":{"line":29,"column":36}},{"source":"../src/min.ts","name":null,"original":{"line":21,"column":29},"generated":{"line":29,"column":38}},{"source":"../src/min.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":30,"column":0}},{"source":"../src/min.ts","name":null,"original":{"line":22,"column":6},"generated":{"line":30,"column":6}},{"source":"../src/min.ts","name":null,"original":{"line":22,"column":7},"generated":{"line":30,"column":7}},{"source":"../src/min.ts","name":null,"original":{"line":22,"column":15},"generated":{"line":30,"column":29}},{"source":"../src/min.ts","name":null,"original":{"line":22,"column":7},"generated":{"line":30,"column":32}},{"source":"../src/min.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":30,"column":33}},{"source":"../src/min.ts","name":null,"original":{"line":22,"column":21},"generated":{"line":30,"column":35}},{"source":"../src/min.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":31,"column":0}},{"source":"../src/min.ts","name":null,"original":{"line":23,"column":11},"generated":{"line":31,"column":11}},{"source":"../src/min.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":31,"column":20}},{"source":"../src/min.ts","name":null,"original":{"line":24,"column":3},"generated":{"line":32,"column":0}},{"source":"../src/min.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":34,"column":0}},{"source":"../src/min.ts","name":null,"original":{"line":25,"column":9},"generated":{"line":34,"column":9}},{"source":"../src/min.ts","name":null,"original":{"line":25,"column":12},"generated":{"line":34,"column":12}},{"source":"../src/min.ts","name":null,"original":{"line":25,"column":13},"generated":{"line":34,"column":13}},{"source":"../src/min.ts","name":null,"original":{"line":25,"column":9},"generated":{"line":34,"column":19}},{"source":"../src/min.ts","name":null,"original":{"line":25,"column":20},"generated":{"line":34,"column":20}},{"source":"../src/min.ts","name":null,"original":{"line":25,"column":21},"generated":{"line":34,"column":30}},{"source":"../src/min.ts","name":null,"original":{"line":25,"column":20},"generated":{"line":34,"column":34}},{"source":"../src/min.ts","name":null,"original":{"line":25,"column":27},"generated":{"line":34,"column":36}},{"source":"../src/min.ts","name":null,"original":{"line":25,"column":20},"generated":{"line":34,"column":40}},{"source":"../src/min.ts","name":null,"original":{"line":25,"column":31},"generated":{"line":34,"column":42}},{"source":"../src/min.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":35,"column":0}},{"source":"../src/min.ts","name":null,"original":{"line":26,"column":11},"generated":{"line":35,"column":11}},{"source":"../src/min.ts","name":null,"original":{"line":26,"column":15},"generated":{"line":35,"column":15}},{"source":"../src/min.ts","name":null,"original":{"line":26,"column":16},"generated":{"line":35,"column":16}},{"source":"../src/min.ts","name":null,"original":{"line":26,"column":11},"generated":{"line":35,"column":19}},{"source":"../src/min.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":35,"column":20}},{"source":"../src/min.ts","name":null,"original":{"line":26,"column":11},"generated":{"line":35,"column":24}},{"source":"../src/min.ts","name":null,"original":{"line":26,"column":26},"generated":{"line":35,"column":26}},{"source":"../src/min.ts","name":null,"original":{"line":26,"column":11},"generated":{"line":35,"column":30}},{"source":"../src/min.ts","name":null,"original":{"line":26,"column":4},"generated":{"line":35,"column":31}},{"source":"../src/min.ts","name":null,"original":{"line":27,"column":3},"generated":{"line":36,"column":0}},{"source":"../src/min.ts","name":null,"original":{"line":25,"column":9},"generated":{"line":36,"column":3}},{"source":"../src/min.ts","name":null,"original":{"line":27,"column":5},"generated":{"line":36,"column":5}},{"source":"../src/min.ts","name":null,"original":{"line":27,"column":8},"generated":{"line":36,"column":8}},{"source":"../src/min.ts","name":null,"original":{"line":27,"column":9},"generated":{"line":36,"column":9}},{"source":"../src/min.ts","name":null,"original":{"line":27,"column":8},"generated":{"line":36,"column":10}},{"source":"../src/min.ts","name":null,"original":{"line":25,"column":9},"generated":{"line":36,"column":11}},{"source":"../src/min.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":36,"column":12}},{"source":"../src/min.ts","name":null,"original":{"line":28,"column":1},"generated":{"line":37,"column":0}}],"sources":{"../src/min.ts":"import each from './each';\nimport isArray from './is-array';\n\n/**\n * @param {Array} arr The array to iterate over.\n * @return {*} Returns the minimum value.\n * @example\n *\n * min([1, 2]);\n * // => 1\n *\n * min([]);\n * // => undefined\n *\n * const data = new Array(1250010).fill(1).map((d,idx) => idx);\n *\n * min(data);\n * // => 1250010\n * // Math.min(...data) will encounter \"Maximum call stack size exceeded\" error\n */\nexport default (arr: number[]): number | undefined => {\n  if (!isArray(arr)) {\n    return undefined;\n  }\n  return arr.reduce((prev, curr) => {\n    return Math.min(prev, curr)\n  }, arr[0]);\n};\n"},"lineCount":null}},"error":null,"hash":"4d025cb3cb2beb8e10fc17780eb00c8c","cacheData":{"env":{}}}