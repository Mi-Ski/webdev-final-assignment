{"id":"../node_modules/@antv/util/esm/is-arguments.js","dependencies":[{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\esm\\is-arguments.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\src\\is-arguments.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\package.json","includedInParent":true,"mtime":1638980225037},{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\package.json","includedInParent":true,"mtime":1638979319359},{"name":"./is-type","loc":{"line":7,"column":19},"parent":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\esm\\is-arguments.js","resolved":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\esm\\is-type.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isType = _interopRequireDefault(require(\"./is-type\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * 是否是参数类型\n *\n * @param {Object} value 测试的值\n * @return {Boolean}\n */\nvar isArguments = function (value) {\n  return (0, _isType.default)(value, 'Arguments');\n};\n\nvar _default = isArguments;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/is-arguments.ts","name":null,"original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":12,"column":0}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":18,"column":0}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":18,"column":4}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":9,"column":17},"generated":{"line":18,"column":15}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":9,"column":20},"generated":{"line":18,"column":18}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":9,"column":29},"generated":{"line":18,"column":28}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":9,"column":20},"generated":{"line":18,"column":33}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":9,"column":39},"generated":{"line":18,"column":35}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":19,"column":0}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":19,"column":9}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":10,"column":16},"generated":{"line":19,"column":30}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":19,"column":35}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":10,"column":23},"generated":{"line":19,"column":37}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":19,"column":48}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":10,"column":2},"generated":{"line":19,"column":49}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":11,"column":1},"generated":{"line":20,"column":0}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":20,"column":1}},{"source":"../src/is-arguments.ts","name":null,"original":{"line":13,"column":15},"generated":{"line":22,"column":15}}],"sources":{"../src/is-arguments.ts":"/**\n * 是否是参数类型\n *\n * @param {Object} value 测试的值\n * @return {Boolean}\n */\nimport isType from './is-type';\n\nconst isArguments = function(value: any): boolean {\n  return isType(value, 'Arguments');\n};\n\nexport default isArguments;\n"},"lineCount":null}},"error":null,"hash":"42579e1203defa7099bc2dc9ebeb2937","cacheData":{"env":{}}}