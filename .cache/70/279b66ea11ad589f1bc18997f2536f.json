{"id":"../node_modules/@antv/util/esm/is-array.js","dependencies":[{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\esm\\is-array.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\src\\is-array.ts","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\package.json","includedInParent":true,"mtime":1638980225037},{"name":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\package.json","includedInParent":true,"mtime":1638979319359},{"name":"./is-type","loc":{"line":1,"column":19},"parent":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\esm\\is-array.js","resolved":"C:\\Users\\skiba\\Desktop\\webdev-final-assignment\\node_modules\\@antv\\util\\esm\\is-type.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _isType = _interopRequireDefault(require(\"./is-type\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = function _default(value) {\n  return Array.isArray ? Array.isArray(value) : (0, _isType.default)(value, 'Array');\n};\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/is-array.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/is-array.ts","name":null,"original":{"line":3,"column":15},"generated":{"line":12,"column":15}},{"source":"../src/is-array.ts","name":null,"original":{"line":3,"column":16},"generated":{"line":12,"column":33}},{"source":"../src/is-array.ts","name":null,"original":{"line":3,"column":15},"generated":{"line":12,"column":38}},{"source":"../src/is-array.ts","name":null,"original":{"line":3,"column":26},"generated":{"line":12,"column":40}},{"source":"../src/is-array.ts","name":null,"original":{"line":4,"column":2},"generated":{"line":13,"column":0}},{"source":"../src/is-array.ts","name":null,"original":{"line":4,"column":9},"generated":{"line":13,"column":9}},{"source":"../src/is-array.ts","name":null,"original":{"line":4,"column":14},"generated":{"line":13,"column":14}},{"source":"../src/is-array.ts","name":null,"original":{"line":4,"column":15},"generated":{"line":13,"column":15}},{"source":"../src/is-array.ts","name":null,"original":{"line":4,"column":9},"generated":{"line":13,"column":22}},{"source":"../src/is-array.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":13,"column":25}},{"source":"../src/is-array.ts","name":null,"original":{"line":5,"column":9},"generated":{"line":13,"column":30}},{"source":"../src/is-array.ts","name":null,"original":{"line":5,"column":10},"generated":{"line":13,"column":31}},{"source":"../src/is-array.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":13,"column":38}},{"source":"../src/is-array.ts","name":null,"original":{"line":5,"column":18},"generated":{"line":13,"column":39}},{"source":"../src/is-array.ts","name":null,"original":{"line":5,"column":4},"generated":{"line":13,"column":44}},{"source":"../src/is-array.ts","name":null,"original":{"line":4,"column":9},"generated":{"line":13,"column":45}},{"source":"../src/is-array.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":13,"column":48}},{"source":"../src/is-array.ts","name":null,"original":{"line":6,"column":11},"generated":{"line":13,"column":69}},{"source":"../src/is-array.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":13,"column":74}},{"source":"../src/is-array.ts","name":null,"original":{"line":6,"column":18},"generated":{"line":13,"column":76}},{"source":"../src/is-array.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":13,"column":83}},{"source":"../src/is-array.ts","name":null,"original":{"line":4,"column":2},"generated":{"line":13,"column":84}},{"source":"../src/is-array.ts","name":null,"original":{"line":7,"column":1},"generated":{"line":14,"column":0}}],"sources":{"../src/is-array.ts":"import isType from './is-type';\n\nexport default (value: any): value is Array<any> => {\n  return Array.isArray ?\n    Array.isArray(value) :\n    isType(value, 'Array');\n}\n"},"lineCount":null}},"error":null,"hash":"ef4a20cab08bafce73b664303c3085f7","cacheData":{"env":{}}}